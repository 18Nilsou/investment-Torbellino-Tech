python3 -m unittest test_dolev_strong.py 
F...
======================================================================
FAIL: test_all_honest (test_dolev_strong.TestDolevStrongProtocol)
----------------------------------------------------------------------
Traceback (most recent call last):
investment/market_sim/consensus/test_dolev_strong.py", line 7, in test_all_honest
    self.assertTrue(all(r == 1 for r in result))
AssertionError: False is not true

----------------------------------------------------------------------
Ran 4 tests in 0.000s

FAILED (failures=1)

python3 -m unittest test_dolev_strong.py 
[0, 0, 0, 0, 0]
F[0, 0, 0, 0, 0]
.[0, 0, 0, 0]
.[0, 0, 0, 0]
.
======================================================================
FAIL: test_all_honest (test_dolev_strong.TestDolevStrongProtocol)
----------------------------------------------------------------------
Traceback (most recent call last):
investment/market_sim/consensus/test_dolev_strong.py", line 8, in test_all_honest
    self.assertTrue(all(r == 1 for r in result))
AssertionError: False is not true

----------------------------------------------------------------------
Ran 4 tests in 0.000s

FAILED (failures=1)



pytest test_dolev_strong_pytest.py 
============================================================== test session starts ==============================================================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /usr/bin/python3
cachedir: .pytest_cache
PyQt5 5.15.11 -- Qt runtime 5.15.14 -- Qt compiled 5.15.14
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
/investment/market_sim
configfile: pytest.ini
plugins: qt-4.4.0, dash-2.18.2, hydra-core-1.3.2, anyio-4.4.0, typeguard-4.3.0, benchmark-5.1.0
collected 8 items                                                                                                                               

test_dolev_strong_pytest.py::test_all_honest FAILED                                                                                       [ 12%]
test_dolev_strong_pytest.py::test_one_corrupt_sender PASSED                                                                               [ 25%]
test_dolev_strong_pytest.py::test_majority_agree PASSED                                                                                   [ 37%]
test_dolev_strong_pytest.py::test_validity PASSED                                                                                         [ 50%]
test_dolev_strong_pytest.py::test_consensus_scenarios[5-1-1-corrupt_nodes0-expected0] FAILED                                              [ 62%]
test_dolev_strong_pytest.py::test_consensus_scenarios[4-1-0-corrupt_nodes1-expected1] PASSED                                              [ 75%]
test_dolev_strong_pytest.py::test_consensus_scenarios[3-1-1-corrupt_nodes2-expected2] PASSED                                              [ 87%]
test_dolev_strong_pytest.py::test_with_fixture FAILED                                                                                     [100%]

=================================================================== FAILURES ====================================================================
________________________________________________________________ test_all_honest ________________________________________________________________
test_dolev_strong_pytest.py:7: in test_all_honest
    assert all(r == 1 for r in result)
E   assert False
E    +  where False = all(<generator object test_all_honest.<locals>.<genexpr> at 0x75fd09777bc0>)
------------------------------------------------------------- Captured stdout call --------------------------------------------------------------
[0, 0, 0, 0, 0]
___________________________________________ test_consensus_scenarios[5-1-1-corrupt_nodes0-expected0] ____________________________________________
test_dolev_strong_pytest.py:37: in test_consensus_scenarios
    assert all(r == e for r, e in zip(result, expected))
E   assert False
E    +  where False = all(<generator object test_consensus_scenarios.<locals>.<genexpr> at 0x75fd06578a50>)
_______________________________________________________________ test_with_fixture _______________________________________________________________
test_dolev_strong_pytest.py:56: in test_with_fixture
    assert all(r == basic_network['sender_input'] for r in result)
E   assert False
E    +  where False = all(<generator object test_with_fixture.<locals>.<genexpr> at 0x75fd097776f0>)
============================================================ short test summary info ============================================================
FAILED test_dolev_strong_pytest.py::test_all_honest - assert False
FAILED test_dolev_strong_pytest.py::test_consensus_scenarios[5-1-1-corrupt_nodes0-expected0] - assert False
FAILED test_dolev_strong_pytest.py::test_with_fixture - assert False
========================================================== 3 failed, 5 passed in 0.13s ==========================================================



pytest -s test_dolev_strong_pytest.py::test_one_corrupt_sender
============================================================== test session starts ==============================================================
platform linux -- Python 3.10.12, pytest-8.3.3, pluggy-1.5.0 -- /usr/bin/python3
cachedir: .pytest_cache
PyQt5 5.15.11 -- Qt runtime 5.15.14 -- Qt compiled 5.15.14
benchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
investment/market_sim
configfile: pytest.ini
plugins: qt-4.4.0, dash-2.18.2, hydra-core-1.3.2, anyio-4.4.0, typeguard-4.3.0, benchmark-5.1.0
collected 1 item                                                                                                                                

test_dolev_strong_pytest.py::test_one_corrupt_sender {'message': 1, 'signatures': [0]}
1
1
1
1
1
1
1
1
[0, 0, 0, 0]
PASSED

=============================================================== 1 passed in 0.01s ===============================================================